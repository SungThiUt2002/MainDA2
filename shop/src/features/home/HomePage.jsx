import React, { useEffect, useState } from "react";
import { useNavigate } from "react-router-dom";
import { getAllProducts, searchProducts } from "../../api/productApi";
import { addToCart } from "../../api/cartApi";
import HomePageSearchFilter from "./HomePageSearchFilter";
import "../../styles/Header.css";
import "./HomePage.css";
import API_CONFIG from "../../config/apiConfig";

const IMAGE_BASE_URL = API_CONFIG.PRODUCT_SERVICE.IMAGE_BASE_URL;

const HomePage = () => {
  const [products, setProducts] = useState([]);
  const [loading, setLoading] = useState(true);
  const [searchResults, setSearchResults] = useState(null);
  const [isSearching, setIsSearching] = useState(false);
  const navigate = useNavigate();

  useEffect(() => {
    const fetchProducts = async () => {
      try {
        const res = await getAllProducts();
        console.log("üì¶ Products data:", res.data);
        setProducts(res.data || []);
      } catch (err) {
        console.error("L·ªói khi t·∫£i s·∫£n ph·∫©m:", err);
        setProducts([]);
      } finally {
        setLoading(false);
      }
    };
    fetchProducts();
  }, []);

  const handleViewProduct = (id) => {
    navigate(`/products/${id}`);
  };

  const handleLogin = () => {
    navigate("/login");
  };

  const handleRegister = () => {
    navigate("/register");
  };

  const handleCart = () => {
    navigate("/cart");
  };

  const handleDashboard = () => {
    const token = localStorage.getItem("accessToken");
    if (token) {
      // Ki·ªÉm tra role t·ª´ token
      try {
        const payload = JSON.parse(atob(token.split(".")[1]));
        if (payload.role === "ADMIN") {
          navigate("/admin/dashboard");
        } else {
          // User th∆∞·ªùng s·∫Ω ·ªü l·∫°i HomePage
          alert("B·∫°n ƒë√£ ƒëƒÉng nh·∫≠p! Ch√†o m·ª´ng quay l·∫°i.");
        }
      } catch (err) {
        alert("B·∫°n ƒë√£ ƒëƒÉng nh·∫≠p! Ch√†o m·ª´ng quay l·∫°i.");
      }
    } else {
      navigate("/login");
    }
  };

  const handleAccount = () => {
    const token = localStorage.getItem("accessToken");
    if (token) {
      try {
        const payload = JSON.parse(atob(token.split(".")[1]));
        // Chuy·ªÉn ƒë·∫øn trang profile ho·∫∑c account
        navigate("/profile");
      } catch (err) {
        navigate("/login");
      }
    } else {
      navigate("/login");
    }
  };

  const handleLogout = () => {
    localStorage.removeItem("accessToken");
    localStorage.removeItem("refreshToken");
    alert("ƒêƒÉng xu·∫•t th√†nh c√¥ng!");
    window.location.reload();
  };

  const handleAddToCart = async (product) => {
    console.log("üõí handleAddToCart ƒë∆∞·ª£c g·ªçi v·ªõi product:", product);
    
    const token = localStorage.getItem("accessToken");
    console.log("üîë Token:", token ? "C√≥ token" : "Kh√¥ng c√≥ token");

    if (!token) {
      alert("‚ö†Ô∏è B·∫°n c·∫ßn ƒëƒÉng nh·∫≠p ƒë·ªÉ th√™m v√†o gi·ªè h√†ng.");
      return;
    }

    const payload = {
      productId: product.id,
      quantity: 1,
    };

    try {
      const result = await addToCart(payload, token);
      console.log("‚úÖ Th√™m v√†o gi·ªè h√†ng th√†nh c√¥ng:", result);
      alert("‚úÖ ƒê√£ th√™m s·∫£n ph·∫©m v√†o gi·ªè h√†ng!");
    } catch (error) {
      console.error("‚ùå L·ªói th√™m v√†o gi·ªè h√†ng:", error);
      const errorMessage = error.response?.data?.message || error.message || "L·ªói k·∫øt n·ªëi ƒë·∫øn m√°y ch·ªß.";
      alert("‚ùå Th√™m v√†o gi·ªè h√†ng th·∫•t b·∫°i: " + errorMessage);
    }
  };

  // Advanced Search Handlers
  const handleAdvancedSearch = async (searchParams) => {
    setIsSearching(true);
    try {
      const response = await searchProducts(searchParams);
      setSearchResults(response.data);
    } catch (error) {
      console.error("L·ªói khi t√¨m ki·∫øm:", error);
      alert("C√≥ l·ªói x·∫£y ra khi t√¨m ki·∫øm s·∫£n ph·∫©m");
    } finally {
      setIsSearching(false);
    }
  };

  const handleSearchReset = () => {
    setSearchResults(null);
  };

  const getCurrentProducts = () => {
    if (searchResults) {
      return searchResults.content || searchResults;
    }
    return products;
  };

  const featuredProducts = getCurrentProducts().slice(0, 8); // L·∫•y 8 s·∫£n ph·∫©m ƒë·∫ßu ti√™n

  // Ki·ªÉm tra tr·∫°ng th√°i ƒëƒÉng nh·∫≠p
  const isLoggedIn = !!localStorage.getItem("accessToken");
  let userInfo = null;
  
  if (isLoggedIn) {
    try {
      const token = localStorage.getItem("accessToken");
      const payload = JSON.parse(atob(token.split(".")[1]));
      userInfo = {
        username: payload.sub || payload.username || "User",
        role: payload.role || "USER"
      };
    } catch (err) {
      console.error("L·ªói parse token:", err);
    }
  }

  return (
    <div className="homepage">
      {/* Header */}
      <header className="header">
        <div className="header-container">
          <div className="logo">
            <h1>üõçÔ∏è TechShop</h1>
          </div>
          
          <nav className="nav">
            <a href="#home" className="nav-link">Trang ch·ªß</a>
            <a href="#search" className="nav-link">T√¨m ki·∫øm</a>
            <a href="#products" className="nav-link">S·∫£n ph·∫©m</a>
            <a href="#about" className="nav-link">Gi·ªõi thi·ªáu</a>
            <a href="#contact" className="nav-link">Li√™n h·ªá</a>
          </nav>

          <div className="header-actions">
            <button className="btn btn-cart" onClick={handleCart}>
              üõí Gi·ªè h√†ng
            </button>
            
            {isLoggedIn ? (
              <div className="user-account">
                <button className="btn btn-account" onClick={handleAccount}>
                  üë§ {userInfo?.username || "T√†i kho·∫£n"}
                </button>
                <button className="btn btn-logout" onClick={handleLogout}>
                  üö™ ƒêƒÉng xu·∫•t
                </button>
              </div>
            ) : (
              <>
                <button className="btn btn-login" onClick={handleLogin}>
                  ƒêƒÉng nh·∫≠p
                </button>
                <button className="btn btn-register" onClick={handleRegister}>
                  ƒêƒÉng k√Ω
                </button>
              </>
            )}
          </div>
        </div>
      </header>

      {/* Fixed Search Section - Ngay b√™n d∆∞·ªõi header */}
      <section className="fixed-search-section">
        <div className="container">
          {searchResults && (
            <div className="search-results-info">
              <span className="results-count">
                T√¨m th·∫•y {searchResults.totalElements || searchResults.length} s·∫£n ph·∫©m
              </span>
              <button className="btn btn-clear-search" onClick={handleSearchReset}>
                X√≥a k·∫øt qu·∫£ t√¨m ki·∫øm
              </button>
            </div>
          )}
          
          <HomePageSearchFilter
            onSearch={handleAdvancedSearch}
            onReset={handleSearchReset}
            isSearching={isSearching}
          />
        </div>
      </section>

      {/* Hero Section */}
      <section className="hero" id="home">
        <div className="hero-container">
          <div className="hero-content">
            <h1 className="hero-title">
              Ch√†o m·ª´ng ƒë·∫øn v·ªõi <span className="highlight">TechShop</span>
            </h1>
            <p className="hero-subtitle">
              Kh√°m ph√° b·ªô s∆∞u t·∫≠p c√¥ng ngh·ªá ƒëa d·∫°ng v·ªõi ch·∫•t l∆∞·ª£ng cao v√† gi√° c·∫£ h·ª£p l√Ω
            </p>
            <div className="hero-buttons">
              <button className="btn btn-primary" onClick={() => document.getElementById('products').scrollIntoView({ behavior: 'smooth' })}>
                Xem s·∫£n ph·∫©m
              </button>
              <button className="btn btn-secondary" onClick={handleRegister}>
                ƒêƒÉng k√Ω mi·ªÖn ph√≠
              </button>
            </div>
          </div>
          <div className="hero-image">
            <div className="hero-placeholder">
              üõçÔ∏è
            </div>
          </div>
        </div>
      </section>

      {/* Featured Products Section */}
      <section className="featured-products" id="products">
        <div className="container">
          <h2 className="section-title">
            {searchResults ? "K·∫øt qu·∫£ t√¨m ki·∫øm" : "S·∫£n ph·∫©m n·ªïi b·∫≠t"}
          </h2>
          
          {loading ? (
            <div className="loading">
              <div className="spinner"></div>
              <p>ƒêang t·∫£i s·∫£n ph·∫©m...</p>
            </div>
          ) : (
            <div className="products-grid">
              {getCurrentProducts() && getCurrentProducts().length > 0 ? getCurrentProducts().map((product) => (
                <div key={product.id} className="product-card">
                  <div className="product-image">
                    {product.images && product.images.length > 0 && product.images[0] ? (
                      <img 
                        src={`${IMAGE_BASE_URL}${product.images[0].url}`} 
                        alt={product.name}
                        onError={(e) => {
                          e.target.src = "https://via.placeholder.com/300x300?text=No+Image";
                        }}
                      />
                    ) : (
                      <div className="product-placeholder">üì±</div>
                    )}
                  </div>
                  
                  <div className="product-info">
                    <h3 className="product-name">{product.name}</h3>
                    <p className="product-description">
                      {product.description?.substring(0, 100)}...
                    </p>
                    <div className="product-price">
                      <span className="price">
                        {product.price?.toLocaleString('vi-VN')} ‚Ç´
                      </span>
                    </div>
                    <button 
                      className="btn btn-view"
                      onClick={() => handleViewProduct(product.id)}
                    >
                      Xem chi ti·∫øt
                    </button>
                    <button 
                      className="btn btn-cart"
                      onClick={() => {
                        console.log("üîò Button ƒë∆∞·ª£c click v·ªõi product:", product);
                        handleAddToCart(product);
                      }}
                    >
                      Th√™m v√†o gi·ªè h√†ng
                    </button>
                  </div>
                </div>
              )) : (
                <div className="no-products">
                  <p>Kh√¥ng c√≥ s·∫£n ph·∫©m n√†o</p>
                </div>
              )}
            </div>
          )}
          
          {!loading && !searchResults && getCurrentProducts().length > 8 && (
            <div className="view-more">
              <button className="btn btn-primary" onClick={() => document.getElementById('search').scrollIntoView({ behavior: 'smooth' })}>
                T√¨m ki·∫øm t·∫•t c·∫£ s·∫£n ph·∫©m
              </button>
            </div>
          )}
          
          {!loading && searchResults && getCurrentProducts().length > 0 && (
            <div className="view-more">
              <button className="btn btn-secondary" onClick={handleSearchReset}>
                Quay l·∫°i s·∫£n ph·∫©m n·ªïi b·∫≠t
              </button>
            </div>
          )}
        </div>
      </section>

      {/* About Section */}
      <section className="about" id="about">
        <div className="container">
          <div className="about-content">
            <div className="about-text">
              <h2 className="section-title">V·ªÅ TechShop</h2>
              <p>
                TechShop l√† c·ª≠a h√†ng c√¥ng ngh·ªá h√†ng ƒë·∫ßu, chuy√™n cung c·∫•p c√°c s·∫£n ph·∫©m 
                c√¥ng ngh·ªá ch·∫•t l∆∞·ª£ng cao v·ªõi gi√° c·∫£ h·ª£p l√Ω. Ch√∫ng t√¥i cam k·∫øt mang ƒë·∫øn 
                tr·∫£i nghi·ªám mua s·∫Øm t·ªët nh·∫•t cho kh√°ch h√†ng.
              </p>
              <div className="features">
                <div className="feature">
                  <span className="feature-icon">üöö</span>
                  <div>
                    <h4>Giao h√†ng nhanh</h4>
                    <p>Giao h√†ng trong 24h</p>
                  </div>
                </div>
                <div className="feature">
                  <span className="feature-icon">üõ°Ô∏è</span>
                  <div>
                    <h4>B·∫£o h√†nh ch√≠nh h√£ng</h4>
                    <p>B·∫£o h√†nh 12-24 th√°ng</p>
                  </div>
                </div>
                <div className="feature">
                  <span className="feature-icon">üí∞</span>
                  <div>
                    <h4>Gi√° t·ªët nh·∫•t</h4>
                    <p>Cam k·∫øt gi√° c·∫°nh tranh</p>
                  </div>
                </div>
              </div>
            </div>
            <div className="about-image">
              <div className="about-placeholder">üè™</div>
            </div>
          </div>
        </div>
      </section>

      {/* Footer */}
      <footer className="footer" id="contact">
        <div className="container">
          <div className="footer-content">
            <div className="footer-section">
              <h3>TechShop</h3>
              <p>N∆°i mua s·∫Øm c√¥ng ngh·ªá tin c·∫≠y</p>
              <div className="social-links">
                <a href="#" className="social-link">üìò</a>
                <a href="#" className="social-link">üì∑</a>
                <a href="#" className="social-link">üê¶</a>
                <a href="#" className="social-link">üì∫</a>
              </div>
            </div>
            
            <div className="footer-section">
              <h4>Li√™n k·∫øt</h4>
              <ul>
                <li><a href="#home">Trang ch·ªß</a></li>
                <li><a href="#products">S·∫£n ph·∫©m</a></li>
                <li><a href="#about">Gi·ªõi thi·ªáu</a></li>
                <li><a href="#contact">Li√™n h·ªá</a></li>
              </ul>
            </div>
            
            <div className="footer-section">
              <h4>H·ªó tr·ª£</h4>
              <ul>
                <li><a href="#">H∆∞·ªõng d·∫´n mua h√†ng</a></li>
                <li><a href="#">Ch√≠nh s√°ch b·∫£o h√†nh</a></li>
                <li><a href="#">Ch√≠nh s√°ch ƒë·ªïi tr·∫£</a></li>
                <li><a href="#">FAQ</a></li>
              </ul>
            </div>
            
            <div className="footer-section">
              <h4>Li√™n h·ªá</h4>
              <p>üìß info@techshop.com</p>
              <p>üìû 1900-1234</p>
              <p>üìç 123 ƒê∆∞·ªùng ABC, Qu·∫≠n 1, TP.HCM</p>
            </div>
          </div>
          
          <div className="footer-bottom">
            <p>&copy; 2024 TechShop. T·∫•t c·∫£ quy·ªÅn ƒë∆∞·ª£c b·∫£o l∆∞u.</p>
          </div>
        </div>
      </footer>
    </div>
  );
};

export default HomePage; 