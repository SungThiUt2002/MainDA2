#version: '3.8'
#
#services:
#  # PostgreSQL Database
#  postgres:
#    image: postgres:15
#    container_name: inventory-postgres
#    environment:
#      POSTGRES_DB: inventory_service_db
#      POSTGRES_USER: postgres
#      POSTGRES_PASSWORD: password
#    ports:
#      - "5432:5432"
#    volumes:
#      - postgres_data:/var/lib/postgresql/data
#      - ./database_schema.sql:/docker-entrypoint-initdb.d/init.sql
#    networks:
#      - inventory-network
#
#  # Kafka
#  zookeeper:
#    image: confluentinc/cp-zookeeper:7.4.0
#    container_name: inventory-zookeeper
#    environment:
#      ZOOKEEPER_CLIENT_PORT: 2181
#      ZOOKEEPER_TICK_TIME: 2000
#    networks:
#      - inventory-network
#
#  kafka:
#    image: confluentinc/cp-kafka:7.4.0
#    container_name: inventory-kafka
#    depends_on:
#      - zookeeper
#    ports:
#      - "9092:9092"
#    environment:
#      KAFKA_BROKER_ID: 1
#      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
#      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092
#      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
#      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
#      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
#    networks:
#      - inventory-network
#
#  # Kafka UI (Optional)
#  kafka-ui:
#    image: provectuslabs/kafka-ui:latest
#    container_name: inventory-kafka-ui
#    depends_on:
#      - kafka
#    ports:
#      - "8080:8080"
#    environment:
#      KAFKA_CLUSTERS_0_NAME: local
#      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka:9092
#      KAFKA_CLUSTERS_0_ZOOKEEPER: zookeeper:2181
#    networks:
#      - inventory-network
#
#  # Inventory Service
#  inventory-service:
#    build: .
#    container_name: inventory-service
#    ports:
#      - "9007:9007"
#    environment:
#      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/inventory_service_db
#      SPRING_DATASOURCE_USERNAME: postgres
#      SPRING_DATASOURCE_PASSWORD: password
#      SPRING_KAFKA_BOOTSTRAP_SERVERS: kafka:9092
#    depends_on:
#      - postgres
#      - kafka
#    networks:
#      - inventory-network
#
#volumes:
#  postgres_data:
#
#networks:
#  inventory-network:
#    driver: bridge