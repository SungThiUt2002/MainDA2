
server:
  port: 9011

spring:
#  application:
#    name: order-service

  datasource:
    url: ${SPRING_DATASOURCE_URL:jdbc:mysql://${MYSQL_HOST:localhost}:${MYSQL_PORT:3306}/order_da2?useSSL=false&serverTimezone=Asia/Ho_Chi_Minh&allowPublicKeyRetrieval=true&createDatabaseIfNotExist=true}
    username: ${SPRING_DATASOURCE_USERNAME:root}
    password: ${SPRING_DATASOURCE_PASSWORD:root}
    driver-class-name: com.mysql.cj.jdbc.Driver

  jpa:
    hibernate:
      ddl-auto: ${SPRING_JPA_HIBERNATE_DDL_AUTO:update}
    show-sql: true
    properties:
      hibernate:
        dialect: org.hibernate.dialect.MySQLDialect
        format_sql: true

  kafka:
    bootstrap-servers: ${SPRING_KAFKA_BOOTSTRAP_SERVERS:${KAFKA_BROKERS:localhost:9092}}
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
      properties:
        spring.json.add.type.headers: true

    consumer:
      group-id: order-service-group
      auto-offset-reset: earliest
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
      properties:
        spring:
          json:
            trusted:
              packages: "*"

#app:
#  product-service:
#    url: http://localhost:9001
#  inventory-service:
#    url: http://localhost:9007
#  account-service:
#    url: http://localhost:9003
app:
  product-service:
    url: ${APP_PRODUCT_SERVICE_URL:http://localhost:9001}
  inventory-service:
    url: ${APP_INVENTORY_SERVICE_URL:http://localhost:9007}
  account-service:
    url: ${APP_ACCOUNT_SERVICE_URL:http://localhost:9003}

#
##jwt:
##  secret-key: 404E635266556A586E3272357538782F413F4428472B4B6250645367566B5970
#
## Eureka configuration
#eureka:
#  client:
#    service-url:
#      defaultZone: http://localhost:8761/eureka
#    enabled: true
